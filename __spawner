import { spawn, ChildProcess } from 'child_process';

const command: string = 'node'; // Replace with the appropriate command
const args: string[] = ['-e', 'console.log("Hello from child process!")'];

const childProcess: ChildProcess = spawn(command, args);

// Listen for data on the child process's standard output
childProcess.stdout.on('data', (data: Buffer) => {
  console.log(`Child Process Output: ${data.toString()}`);
});

// Listen for data on the child process's standard error
childProcess.stderr.on('data', (data: Buffer) => {
  console.error(`Child Process Error: ${data.toString()}`);
});

// Send data to the child process's standard input
childProcess.stdin.write('Some input data\n');
childProcess.stdin.end();

// Listen for the child process's exit event
childProcess.on('close', (code: number) => {
  console.log(`Child process exited with code ${code}`);
});
